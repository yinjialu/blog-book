(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{204:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),s("ul",[s("li",[t._v("Thunk函数 ==> 将参数放到一个临时函数中，再将这个临时函数传入函数体。")]),t._v(" "),s("li",[t._v("js 的 Thunk函数 ==> 将多参数函数，替换成一个只接受回调函数作为参数的单函数参数。\n"),s("a",{attrs:{href:"https://github.com/tj/node-thunkify",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thunkify"),s("OutboundLink")],1)])]),t._v(" "),t._m(11),s("ul",[s("li",[t._v("Generator 的自动执行 ==> 在异步操作的回调函数里执行 g.next() 交还程序的执行权 参考 "),s("a",{attrs:{href:"https://github.com/tj/co",target:"_blank",rel:"noopener noreferrer"}},[t._v("co"),s("OutboundLink")],1)])]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"es6-新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-新特性","aria-hidden":"true"}},[this._v("#")]),this._v(" ES6 新特性")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"iterator-（遍历器）提供-for-of-访问键值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iterator-（遍历器）提供-for-of-访问键值","aria-hidden":"true"}},[this._v("#")]),this._v(" Iterator （遍历器）提供 for of 访问键值")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[s("p",[t._v("为所有数据结构，提供了一种统一的访问机制")])]),t._v(" "),s("li",[s("p",[t._v("默认接口部署在数据结构的 "),s("code",[t._v("Symbol.iterator")]),t._v(" 属性上")])]),t._v(" "),s("li",[s("p",[t._v("接口返回的遍历器对象包含了以下属性")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("next")]),t._v(" 必选 定义了 for of 遍历的顺序和结束条件")]),t._v(" "),s("li",[s("code",[t._v("return")]),t._v(" 可选 如果for...of循环提前退出（通常是因为出错，或者有break语句），就会调用return方法")]),t._v(" "),s("li",[s("code",[t._v("throw")]),t._v(" 可选")])])]),t._v(" "),s("li",[s("p",[t._v("对象没有遍历器接口 "),s("code",[t._v("Symbol.iterator")]),t._v(" 因为对象的属性没有顺序，可以自定义遍历顺序")])]),t._v(" "),s("li",[s("p",[t._v("for in 遍历键名")])]),t._v(" "),s("li",[s("p",[t._v("只返回数字索引的属性")])]),t._v(" "),s("li",[s("p",[t._v("类数据对象可以直接借用数据的遍历器接口 "),s("code",[t._v("Symbol.iterator")])])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"generator-状态机-（遍历器生成函数）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator-状态机-（遍历器生成函数）","aria-hidden":"true"}},[this._v("#")]),this._v(" Generator (状态机)（遍历器生成函数）")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("function 和 函数名之间加 "),s("code",[t._v("*")]),t._v(" 标记")]),t._v(" "),s("li",[t._v("返回一个遍历器对象")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("yield")]),t._v(" 封装了多个状态")]),t._v(" "),s("li",[t._v("yield表达式后面的表达式，只有当调用next方法、内部指针指向该语句时才会执行")]),t._v(" "),s("li",[t._v("执行遍历器的 "),s("code",[t._v("next")]),t._v(" 方法依次读取状态")]),t._v(" "),s("li",[t._v("遍历器生成函数")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myIterable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmyIterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("myIterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3]")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("返回的遍历器对象也有 "),a("code",[this._v("Symbol.iterator")]),this._v(" 属性，执行后返回自身")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// some code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ng"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" g\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[s("code",[t._v("next")]),t._v(" 方法的参数会被当作上一个 "),s("code",[t._v("yield")]),t._v(" 表达式的返回值")]),t._v(" "),s("li",[s("code",[t._v("Reflect.ownKeys()")]),t._v(" 返回一个由目标对象自身的属性键组成的数组")]),t._v(" "),s("li",[t._v("ajax 的同步封装")])])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://some.url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeAjaxCall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  关键步骤 带上请求结果 继续执行下一步")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"generator-的异步应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generator-的异步应用","aria-hidden":"true"}},[this._v("#")]),this._v(" Generator 的异步应用")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Thunk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async","aria-hidden":"true"}},[this._v("#")]),this._v(" async")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("Generator 函数的 "),s("code",[t._v("*")]),t._v(" 号替换成 "),s("code",[t._v("async")]),t._v("，"),s("code",[t._v("yield")]),t._v(" 替换成 "),s("code",[t._v("await")])]),t._v(" "),s("li",[t._v("内置执行器 （Generator + co）")]),t._v(" "),s("li",[t._v("await 后面可以是 Promise 对象和原始类型的值 （会立即转成 resolved 的 Promise 对象）")]),t._v(" "),s("li",[t._v("async 返回 Promise 对象")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[this._v("#")]),this._v(" Set")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[s("p",[t._v("类似于数组的结构，成员唯一")])]),t._v(" "),s("li",[s("p",[t._v("在 Set 内部，两个NaN是相等")])]),t._v(" "),s("li",[s("p",[t._v("两个对象总是不相等的")])]),t._v(" "),s("li",[s("p",[t._v("API:")]),t._v(" "),s("ul",[s("li",[t._v("add(value): 添加某个值，返回Set结构本身。")]),t._v(" "),s("li",[t._v("delete(value): 删除某个值，返回一个布尔值，表示删除是否成功。")]),t._v(" "),s("li",[t._v("has(value): 返回一个布尔值，表示该值是否为 Set 的成员。")]),t._v(" "),s("li",[t._v("clear(): 清除所有成员，没有返回值。")])])]),t._v(" "),s("li",[s("p",[t._v("Array.from方法可以将 Set 结构转为数组。")])]),t._v(" "),s("li",[s("p",[t._v("遍历操作：")]),t._v(" "),s("ul",[s("li",[t._v("keys(): 返回键名的遍历器")]),t._v(" "),s("li",[t._v("values(): 返回键值的遍历器")]),t._v(" "),s("li",[t._v("entries(): 返回键值对的遍历器")]),t._v(" "),s("li",[t._v("forEach(): 使用回调函数遍历每个成员")])])]),t._v(" "),s("li",[s("p",[t._v("Set的遍历顺序就是插入顺序。")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakset","aria-hidden":"true"}},[this._v("#")]),this._v(" WeakSet")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("WeakSet 的成员只能是对象，不能是其他值")]),t._v(" "),s("li",[t._v("WeakSet 中的对象是弱引用，即垃圾回收机制不考虑 WeakSet 对该对象的引用，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 WeakSet 之中。")]),t._v(" "),s("li",[t._v("不可遍历")]),t._v(" "),s("li",[t._v("API:\n"),s("ul",[s("li",[t._v("add(value) 向WeakSet 实例添加一个新成员")]),t._v(" "),s("li",[t._v("delete(value) 清除WeakSet实例的指定成员")]),t._v(" "),s("li",[t._v("has(value) 返回一个布尔值，表示某个值是否存在")])])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[this._v("#")]),this._v(" Map")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[s("p",[t._v("键的范围不限于字符串，各种类型的值都可以当做键")])]),t._v(" "),s("li",[s("p",[t._v('Object 结构提供了 "字符串-值"的对应')])]),t._v(" "),s("li",[s("p",[t._v('Map 结构提供了 "值-值" 的对应')])]),t._v(" "),s("li",[s("p",[t._v("接受数组作为参数，数组的成员是一个个表示键值对的数组。")])]),t._v(" "),s("li",[s("p",[t._v("只有对同一个对象的引用，Map 结构才将其视为同一个键")])]),t._v(" "),s("li",[s("p",[t._v("API:")]),t._v(" "),s("ul",[s("li",[t._v("size 属性")]),t._v(" "),s("li",[t._v("set(key, value)  返回当前 Map 对象 - 链式写法")]),t._v(" "),s("li",[t._v("get(key)")]),t._v(" "),s("li",[t._v("has(key)")]),t._v(" "),s("li",[t._v("delete(key)")]),t._v(" "),s("li",[t._v("clear()")])])]),t._v(" "),s("li",[s("p",[t._v("遍历方法：")]),t._v(" "),s("ul",[s("li",[t._v("keys():  返回键名的遍历器")]),t._v(" "),s("li",[t._v("values(): 返回键值的遍历器")]),t._v(" "),s("li",[t._v("entries(): 返回所有成员的遍历器")]),t._v(" "),s("li",[t._v("forEach(): 遍历 Map 的所有成员")])])]),t._v(" "),s("li",[s("p",[t._v("遍历顺序就是插入顺序")])]),t._v(" "),s("li",[s("p",[t._v("扩展运算符(...) 将 Map 结构转为 数组结构")])]),t._v(" "),s("li",[s("p",[t._v("将数组传入 Map 结构函数，就可以转为 Map")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"weakmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap","aria-hidden":"true"}},[this._v("#")]),this._v(" WeakMap")])},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ul",[s("li",[t._v("只接受对象作为键名")]),t._v(" "),s("li",[t._v("WeakMap 的键名所指向的对象，不计入垃圾回收机制")]),t._v(" "),s("li",[t._v("用途：\n"),s("ul",[s("li",[s("p",[t._v("DOM 节点作为键名")])]),t._v(" "),s("li",[s("p",[t._v("部署私有属性")])])])])])}],!1,null,null,null);a.default=e.exports}}]);