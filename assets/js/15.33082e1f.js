(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{225:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"异步与性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步与性能","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步与性能")]),t._v(" "),a("h2",{attrs:{id:"回调函数的信任问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回调函数的信任问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 回调函数的信任问题")]),t._v(" "),a("p",[t._v("回调函数由第三方模块执行，无法保证回调函数被执行的时机和次数")]),t._v(" "),a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise","aria-hidden":"true"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),a("p",[t._v("控制反转，第三方模块通知任务何时结束，我们自己的代码决定下一步做什么。\nPromise 提供了一个中立的协商机制")]),t._v(" "),a("ul",[a("li",[t._v(".then() 注册的回调函数会异步调用")]),t._v(" "),a("li",[t._v(".then() 注册的回调函数会添加到任务队列，在下一轮事件循环之前完成调用")]),t._v(" "),a("li",[t._v("Promise 的 resole 或者 reject 一定会被调用，另外还可以通过 Promise.race() 设置超时")]),t._v(" "),a("li",[t._v("Promise 决议只会被调用一次")]),t._v(" "),a("li",[t._v("Promise 内部的错误会被捕获，并自动触发 reject")]),t._v(" "),a("li",[t._v("Promise.resolve() 获取一个可信任的 Promise")]),t._v(" "),a("li",[t._v("Promise.catch() 捕获错误")]),t._v(" "),a("li",[t._v("Promise.catch() 中出现的错误怎么办")]),t._v(" "),a("li",[t._v(".then() 的默认处理函数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  把接受到的值传入下一个Promise")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v(".catch() 的默认处理函数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rejectHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" err  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  重新抛出错误  沿着Promise 链传下去")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);s.default=r.exports}}]);